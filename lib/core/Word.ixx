export module ifc.Word;

import ifc.common_types;
import ifc.SourceLocation;

#include "partition_defines.h"

export namespace ifc
{
    enum class WordSort : uint8_t
    {
        Unknown    = 0x00,
        Directive  = 0x01, // Word::value type is SourceDirective
        Punctuator = 0x02, // Word::value type is SourcePunctuator
        Literal    = 0x03, // Word::value type is SourceLiteral
        Operator   = 0x04, // Word::value type is SourceOperator
        Keyword    = 0x05, // Word::value type is SourceKeyword
        Identifier = 0x06, // Word::value type is SourceIdentifier
    };

    struct Sentence
    {
        WordIndex start;
        Cardinality cardinality;
        SourceLocation locus;

        PARTITION_NAME("src.sentence");
    };
    
    struct Word
    {
        SourceLocation locus;
        Index index;
        uint16_t value;
        WordSort sort;
        uint8_t padding;

        PARTITION_NAME("src.word");
    };
    static_assert(sizeof(Word) == 16);

    enum class SourceDirective : uint16_t
    {
        Msvc = 0x1FFF,
        MsvcPragmaPush = 0x2000,
        MsvcPragmaPop = 0x2001,
        MsvcDirectiveStart = 0x2002,
        MsvcDirectiveEnd = 0x2003,
        MsvcPragmaAllocText = 0x2004,
        MsvcPragmaAutoInline = 0x2005,
        MsvcPragmaBssSeg = 0x2006,
        MsvcPragmaCheckStack = 0x2007,
        MsvcPragmaCodeSeg = 0x2008,
        MsvcPragmaComment = 0x2009,
        MsvcPragmaComponent = 0x200A,
        MsvcPragmaConform = 0x200B,
        MsvcPragmaConstSeg = 0x200C,
        MsvcPragmaDataSeg = 0x200D,
        MsvcPragmaDeprecated = 0x200E,
        MsvcPragmaDetectMismatch = 0x200F,
        MsvcPragmaEndregion = 0x2010,
        MsvcPragmaExecutionCharacterSet = 0x2011,
        MsvcPragmaFenvAccess = 0x2012,
        MsvcPragmaFileHash = 0x2013,
        MsvcPragmaFloatControl = 0x2014,
        MsvcPragmaFpContract = 0x2015,
        MsvcPragmaFunction = 0x2016,
        MsvcPragmaBGI = 0x2017,
        MsvcPragmaIdent = 0x2018,
        MsvcPragmaImplementationKey = 0x2019,
        MsvcPragmaIncludeAlias = 0x201A,
        MsvcPragmaInitSeg = 0x201B,
        MsvcPragmaInlineDepth = 0x201C,
        MsvcPragmaInlineRecursion = 0x201D,
        MsvcPragmaIntrinsic = 0x201E,
        MsvcPragmaLoop = 0x201F,
        MsvcPragmaMakePublic = 0x2020,
        MsvcPragmaManaged = 0x2021,
        MsvcPragmaMessage = 0x2022,
        MsvcPragmaOMP = 0x2023,
        MsvcPragmaOptimize = 0x2024,
        MsvcPragmaPack = 0x2025,
        MsvcPragmaPointerToMembers = 0x2026,
        MsvcPragmaPopMacro = 0x2027,
        MsvcPragmaPrefast = 0x2028,
        MsvcPragmaPushMacro = 0x2029,
        MsvcPragmaRegion = 0x202A,
        MsvcPragmaRuntimeChecks = 0x202B,
        MsvcPragmaSameSeg = 0x202C,
        MsvcPragmaSection = 0x202D,
        MsvcPragmaSegment = 0x202E,
        MsvcPragmaSetlocale = 0x202F,
        MsvcPragmaStartMapRegion = 0x2030,
        MsvcPragmaStopMapRegion = 0x2031,
        MsvcPragmaStrictGSCheck = 0x2032,
        MsvcPragmaSystemHeader = 0x2033,
        MsvcPragmaUnmanaged = 0x2034,
        MsvcPragmaVtordisp = 0x2035,
        MsvcPragmaWarning = 0x2036,
        MsvcPragmaP0include = 0x2037,
        MsvcPragmaP0line = 0x2038,
    };

    enum class SourcePunctuator : uint16_t
    {
        // Group 1
        Unknown = 0x00,
        LeftParenthesis = 0x01,
        RightParenthesis = 0x02,
        LeftBracket = 0x03,
        RightBracket = 0x04,
        LeftBrace = 0x05,
        RightBrace = 0x06,
        Colon = 0x07,
        Question = 0x08,
        Semicolon = 0x09,
        ColonColon = 0x0A,

        // Group 2
        Msvc = 0x1FFF,
        MsvcZeroWidthSpace = 0x2000,
        MsvcEndOfPhrase = 0x2001,
        MsvcFullStop = 0x2002,
        MsvcNestedTemplateStart = 0x2003,
        MsvcDefaultArgumentStart = 0x2004,
        MsvcAlignasEdictStart = 0x2005,
        MsvcDefaultInitStart = 0x2006,
    };

    enum class SourceLiteral : uint16_t
    {
        // Group 1
        Unknown = 0x00,
        Scalar = 0x01,
        String = 0x02,
        DefinedString = 0x03,

        // Group 2
        Msvc = 0x1FFF,
        MsvcFunctionNameMacro = 0x2000,
        MsvcStringPrefixMacro = 0x2001,
        MsvcBinding = 0x2002,
    };

    enum class SourceOperator : uint16_t
    {
        Unknown = 0x00,
        Equal = 0x01,
        Comma = 0x02,
        Exclaim = 0x03,
        Plus = 0x04,
        Dash = 0x05,
        Star = 0x06,
        Slash = 0x07,
        Percent = 0x08,
        LeftChevron = 0x09,
        RightChevron = 0x0A,
        Tilde = 0x0B,
        Caret = 0x0C,
        Bar = 0x0D,
        Ampersand = 0x0E,
        PlusPlus = 0x0F,
        DashDash = 0x10,
        Less = 0x11,
        LessEqual = 0x12,
        Greater = 0x13,
        GreaterEqual = 0x14,
        EqualEqual = 0x15,
        ExclaimEqual = 0x16,
        Diamond = 0x17,
        PlusEqual = 0x18,
        DashEqual = 0x19,
        StarEqual = 0x1A,
        SlashEqual = 0x1B,
        PercentEqual = 0x1C,
        AmpersandEqual = 0x1D,
        BarEqual = 0x1E,
        CaretEqual = 0x1F,
        LeftChevronEqual = 0x20,
        RightChevronEqual = 0x21,
        AmpersandAmpersand = 0x22,
        BarBar = 0x23,
        Ellipsis = 0x24,
        Dot = 0x25,
        Arrow = 0x26,
        DotStar = 0x27,
        ArrowStar = 0x28,
    };

    enum class SourceKeyword : uint16_t
    {
        // Group 1
        Unknown = 0x00,
        Alignas = 0x01,
        Alignof = 0x02,
        Asm = 0x03,
        Auto = 0x04,
        Bool = 0x05,
        Break = 0x06,
        Case = 0x07,
        Catch = 0x08,
        Char = 0x09,
        Char8T = 0x0A,
        Char16T = 0x0B,
        Char32T = 0x0C,
        Class = 0x0D,
        Concept = 0x0E,
        Const = 0x0F,
        Consteval = 0x10,
        Constexpr = 0x11,
        Constinit = 0x12,
        ConstCast = 0x13,
        Continue = 0x14,
        CoAwait = 0x15,
        CoReturn = 0x16,
        CoYield = 0x17,
        Decltype = 0x18,
        Default = 0x19,
        Delete = 0x1A,
        Do = 0x1B,
        Double = 0x1C,
        DynamicCast = 0x1D,
        Else = 0x1E,
        Enum = 0x1F,
        Explicit = 0x20,
        Export = 0x21,
        Extern = 0x22,
        False = 0x23,
        Float = 0x24,
        For = 0x25,
        Friend = 0x26,
        Generic = 0x27,
        Goto = 0x28,
        If = 0x29,
        Inline = 0x2A,
        Int = 0x2B,
        Long = 0x2C,
        Mutable = 0x2D,
        Namespace = 0x2E,
        New = 0x2F,
        Noexcept = 0x30,
        Nullptr = 0x31,
        Operator = 0x32,
        Pragma = 0x33,
        Private = 0x34,
        Protected = 0x35,
        Public = 0x36,
        Register = 0x37,
        ReinterpretCast = 0x38,
        Requires = 0x39,
        Restrict = 0x3A,
        Return = 0x3B,
        Short = 0x3C,
        Signed = 0x3D,
        Sizeof = 0x3E,
        Static = 0x3F,
        StaticAssert = 0x40,
        StaticCast = 0x41,
        Struct = 0x42,
        Switch = 0x43,
        Template = 0x44,
        This = 0x45,
        ThreadLocal = 0x46,
        Throw = 0x47,
        True = 0x48,
        Try = 0x49,
        Typedef = 0x4A,
        Typeid = 0x4B,
        Typename = 0x4C,
        Union = 0x4D,
        Unsigned = 0x4E,
        Using = 0x4F,
        Virtual = 0x50,
        Void = 0x51,
        Volatile = 0x52,
        WcharT = 0x53,
        While = 0x54,

        // Group 2
        Msvc = 0x1FFF,
        MsvcAsm = 0x2000,
        MsvcAssume = 0x2001,
        MsvcAlignof = 0x2002,
        MsvcBased = 0x2003,
        MsvcCdecl = 0x2004,
        MsvcClrcall = 0x2005,
        MsvcDeclspec = 0x2006,
        MsvcEabi = 0x2007,
        MsvcEvent = 0x2008,
        MsvcSehExcept = 0x2009,
        MsvcFastcall = 0x200A,
        MsvcSehFinally = 0x200B,
        MsvcForceinline = 0x200C,
        MsvcHook = 0x200D,
        MsvcIdentifier = 0x200E,
        MsvcIfExists = 0x200F,
        MsvcIfNotExists = 0x2010,
        MsvcInt8 = 0x2011,
        MsvcInt16 = 0x2012,
        MsvcInt32 = 0x2013,
        MsvcInt64 = 0x2014,
        MsvcInt128 = 0x2015,
        MsvcInterface = 0x2016,
        MsvcLeave = 0x2017,
        MsvcMultipleInheritance = 0x2018,
        MsvcNullptr = 0x2019,
        MsvcNovtordisp = 0x201A,
        MsvcPragma = 0x201B,
        MsvcPtr32 = 0x201C,
        MsvcPtr64 = 0x201D,
        MsvcRestrict = 0x201E,
        MsvcSingleInheritance = 0x201F,
        MsvcSptr = 0x2020,
        MsvcStdcall = 0x2021,
        MsvcSuper = 0x2022,
        MsvcThiscall = 0x2023,
        MsvcSehTry = 0x2024,
        MsvcUptr = 0x2025,
        MsvcUuidof = 0x2026,
        MsvcUnaligned = 0x2027,
        MsvcUnhook = 0x2028,
        MsvcVectorcall = 0x2029,
        MsvcVirtualInheritance = 0x202A,
        MsvcW64 = 0x202B,
        MsvcIsClass = 0x202C,
        MsvcIsUnion = 0x202D,
        MsvcIsEnum = 0x202E,
        MsvcIsPolymorphic = 0x202F,
        MsvcIsEmpty = 0x2030,
        MsvcHasTrivialConstructor = 0x2031,
        MsvcIsTriviallyConstructible = 0x2032,
        MsvcIsTriviallyCopyConstructible = 0x2033,
        MsvcIsTriviallyCopyAssignable = 0x2034,
        MsvcIsTriviallyDestructible = 0x2035,
        MsvcHasVirtualDestructor = 0x2036,
        MsvcIsNothrowConstructible = 0x2037,
        MsvcIsNothrowCopyConstructible = 0x2038,
        MsvcIsNothrowCopyAssignable = 0x2039,
        MsvcIsPod = 0x203A,
        MsvcIsAbstract = 0x203B,
        MsvcIsBaseOf = 0x203C,
        MsvcIsConvertibleTo = 0x203D,
        MsvcIsTrivial = 0x203E,
        MsvcIsTriviallyCopyable = 0x203F,
        MsvcIsStandardLayout = 0x2040,
        MsvcIsLiteralType = 0x2041,
        MsvcIsTriviallyMoveConstructible = 0x2042,
        MsvcHasTrivialMoveAssign = 0x2043,
        MsvcIsTriviallyMoveAssignable = 0x2044,
        MsvcIsNothrowMoveAssignable = 0x2045,
        MsvcIsConstructible = 0x2046,
        MsvcUnderlyingType = 0x2047,
        MsvcIsTriviallyAssignable = 0x2048,
        MsvcIsNothrowAssignable = 0x2049,
        MsvcIsDestructible = 0x204A,
        MsvcIsNothrowDestructible = 0x204B,
        MsvcIsAssignable = 0x204C,
        MsvcIsAssignableNocheck = 0x204D,
        MsvcHasUniqueObjectRepresentations = 0x204E,
        MsvcIsAggregate = 0x204F,
        MsvcBuiltinAddressOf = 0x2050,
        MsvcBuiltinOffsetOf = 0x2051,
        MsvcBuiltinBitCast = 0x2052,
        MsvcBuiltinIsLayoutCompatible = 0x2053,
        MsvcBuiltinIsPointerInterconvertibleBaseOf = 0x2054,
        MsvcBuiltinIsPointerInterconvertibleWithClass = 0x2055,
        MsvcBuiltinIsCorrespondingMember = 0x2056,
        MsvcIsRefClass = 0x2057,
        MsvcIsValueClass = 0x2058,
        MsvcIsSimpleValueClass = 0x2059,
        MsvcIsInterfaceClass = 0x205A,
        MsvcIsDelegate = 0x205B,
        MsvcIsFinal = 0x205C,
        MsvcIsSealed = 0x205D,
        MsvcHasFinalizer = 0x205E,
        MsvcHasCopy = 0x205F,
        MsvcHasAssign = 0x2060,
        MsvcHasUserDestructor = 0x2061,
        MsvcPackCardinality = 0x2062,
        MsvcConfusedSizeof = 0x2063,
        MsvcConfusedAlignas = 0x2064,
    };

    enum class SourceIdentifier : uint16_t
    {
        // Group 1
        Plain = 0x00,

        // Group 2
        Msvc = 0x1FFF,
        MsvcBuiltinHugeVal = 0x2000,
        MsvcBuiltinHugeValf = 0x2001,
        MsvcBuiltinNan = 0x2002,
        MsvcBuiltinNanf = 0x2003,
        MsvcBuiltinNans = 0x2004,
        MsvcBuiltinNansf = 0x2005,
    };
}